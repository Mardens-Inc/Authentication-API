export default class Authentication{constructor(debug=false){this.apiUrl=debug?"http://auth.local/":"https://lib.mardens.com/auth/";this.debugMode=debug;this.hasJQuery=window.$!==undefined;this.isLoggedIn=false;if(this.hasJQuery){$(this).on("login",()=>{this.isLoggedIn=true});$(this).on("logout",()=>{this.isLoggedIn=false})}try{this.token=document.cookie.split(";").find(row=>row.trim().startsWith("token=")).trim().slice(6)}catch(e){this.token=null}}async login(username,password){const apiURL=this.apiUrl;let response,data;try{response=await fetch(apiURL,{method:"POST",header:{"Content-Type":"application/json"},body:JSON.stringify({username:username,password:password})});data=await response.json()}catch(err){if(this.hasJQuery)$(this).trigger("error",[{success:false,message:"An unknown error occurred."}]);return err}if(data.success&&data.token){this.generateCookies(data.token);return data}else{if(this.hasJQuery)$(this).trigger("error",[{success:false,message:data.message}]);return data}}async loginWithToken(token){try{const response=await fetch(this.apiUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:token})});const data=await response.json();if(response.ok){if(data.success){this.generateCookies(token)}}else{if(!data.message){data.message="An unknown error occurred."}throw new Error(JSON.stringify(data))}return data}catch(error){console.error(error);throw error}}async loginWithTokenFromCookie(){return this.token==null?false:await this.loginWithToken(this.token)}logout(){document.cookie=`token=; path=/; domain=.${window.location.hostname}; samesite=strict; expires=Thu, 01 Jan 1970 00:00:00 GMT`;if(this.hasJQuery)$(this).trigger("logout")}generateCookies(token){let expire=new Date;expire.setDate(expire.getDate()+2);document.cookie=`token=${token}; path=/; domain=.${window.location.hostname}; samesite=strict; expires=${expire.toGMTString()}`;this.token=token;if(this.hasJQuery)$(this).trigger("login")}}