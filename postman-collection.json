{
	"info": {
		"_postman_id": "ca72da9a-9f88-4de3-9f0f-40f96ada1efa",
		"name": "Mardens Auth API",
		"description": "The \"Authentication Library Project\" provides PHP and JavaScript  \nsolutions for user authentication, including API interaction,  \nconfiguration, and detailed documentation.  \nEndFragment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16833182"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('success');\r",
							"    pm.expect(responseData).to.have.property('message');\r",
							"    pm.expect(responseData).to.have.property('token');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Message is a non-empty string if success is true\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"\r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.success).to.equal(true);\r",
							"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Token is a non-empty string if success is true\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.success).to.equal(true);\r",
							"  pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should be a non-empty string\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "user123",
							"type": "text"
						},
						{
							"key": "password",
							"value": "super_secret_password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				},
				"description": "### Authentication Endpoint\n\nThis API endpoint is used to authenticate users by sending a POST request to the specified URL.\n\n#### Request Body\n\n- `username` (text) - The username of the user.\n- `password` (text) - The password of the user.\n    \n\n#### Response\n\n- `success` (boolean) - Indicates whether the authentication was successful.\n- `message` (string) - Provides a message related to the authentication status."
			},
			"response": [
				{
					"name": "Invalid Username or Password",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "user123",
									"type": "text"
								},
								{
									"key": "password",
									"value": "super_secret_password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://auth.local/",
							"protocol": "http",
							"host": [
								"auth",
								"local"
							],
							"path": [
								""
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 17 Jan 2024 20:09:15 GMT"
						},
						{
							"key": "Server",
							"value": "Apache/2.4.58 (Win64) OpenSSL/3.1.3 PHP/8.2.12"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.2.12"
						},
						{
							"key": "Content-Length",
							"value": "59"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": false,\n    \"message\": \"Invalid username or password.\"\n}"
				},
				{
					"name": "Invalid Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "user123",
									"type": "text"
								},
								{
									"key": "password",
									"value": "super_secret_password",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/",
							"host": [
								"{{url}}"
							],
							"path": [
								""
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 17 Jan 2024 20:09:56 GMT"
						},
						{
							"key": "Server",
							"value": "Apache/2.4.58 (Win64) OpenSSL/3.1.3 PHP/8.2.12"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.2.12"
						},
						{
							"key": "Content-Length",
							"value": "46"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": false,\n    \"message\": \"Invalid request.\"\n}"
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "user123",
									"type": "text"
								},
								{
									"key": "password",
									"value": "super_secret_password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 17 Jan 2024 20:10:55 GMT"
						},
						{
							"key": "Server",
							"value": "Apache/2.4.58 (Win64) OpenSSL/3.1.3 PHP/8.2.12"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.2.12"
						},
						{
							"key": "Set-Cookie",
							"value": "token=eyJ1c2VybmFtZSI6ImRyZXcuY2hhc2UiLCJ0b2tlbiI6IjYyMjRlODE4M2I1ZDUxOTcxZjY4ZGM2ZTRhYTEzMDU5M2ViYmI4YTkxZDY1ODEzYWM2NDA2NDIwNjYzYTIxNDYifQ%3D%3D; expires=Fri, 16 Feb 2024 20:10:55 GMT; Max-Age=2592000; path=/"
						},
						{
							"key": "Content-Length",
							"value": "186"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60, max=100"
						},
						{
							"key": "Connection",
							"value": "Keep-Alive"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"message\": \"Logged in.\",\n    \"token\": \"<<TOKEN_HERE>>\"\n}"
				}
			]
		},
		{
			"name": "Login with Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the 'success' field\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.have.property('success');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Success field is a boolean value\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.success).to.be.a('boolean');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the 'message' field\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.have.property('message');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Message field is a non-empty string\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "super_secret_token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				},
				"description": "\nThis HTTP POST request is used to authenticate a user by sending a payload to the specified endpoint. The request body type is not defined. Upon successful authentication, the response will include a JSON object with a \"success\" key set to true, and a \"message\" key providing additional information about the authentication status.\n"
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ1c2VybmFtZSI6ImRyZXcuY2hhc2UiLCJ0b2tlbiI6IjYyMjRlODE4M2I1ZDUxOTcxZjY4ZGM2ZTRhYTEzMDU5M2ViYmI4YTkxZDY1ODEzYWM2NDA2NDIwNjYzYTIxNDYifQ==",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://auth.local",
							"protocol": "http",
							"host": [
								"auth",
								"local"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 17 Jan 2024 18:33:11 GMT"
						},
						{
							"key": "Server",
							"value": "Apache/2.4.58 (Win64) OpenSSL/3.1.3 PHP/8.2.12"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.2.12"
						},
						{
							"key": "Content-Length",
							"value": "50"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60, max=95"
						},
						{
							"key": "Connection",
							"value": "Keep-Alive"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": true,\n    \"message\": \"Logged in with token.\"\n}"
				},
				{
					"name": "Invalid Token",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJ1c2VybmFtZSI6ImRyZXcuY2hhc2UiLCJ0b2tlbiI6IjYyMjRlODE4M2I1ZDUxOTcxZjY4ZGM2ZTRhYTEzMDU5M2ViYmI4YTkxZDY1ODEzYWM2NDA2NDIwNjYzYTIxNDYifQ==c",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 17 Jan 2024 18:34:36 GMT"
						},
						{
							"key": "Server",
							"value": "Apache/2.4.58 (Win64) OpenSSL/3.1.3 PHP/8.2.12"
						},
						{
							"key": "X-Powered-By",
							"value": "PHP/8.2.12"
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Connection",
							"value": "close"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"success\": false,\n    \"message\": \"Invalid token.\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://auth.local",
			"type": "string"
		}
	]
}